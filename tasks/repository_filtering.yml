---
- name: repository_filtering | Exclude Repositories from the results the Satellite API returned - if defined
  ansible.builtin.set_fact:
    # with this expression we filter out all excluded Repositories if _sat_excluded_repositories
    # is defined and contains any elements, otherwise we assign the content of __t_repositories.resources
    #
    # this eases further processing of the data, as we only have one variable to deal with
    __t_repositories_excluded: >-
      {{
        (
          _sat_excluded_repositories is defined
          and _sat_excluded_repositories | length > 0
        ) | ansible.builtin.ternary(
          __t_repositories.resources |
          rejectattr('name', 'in', _sat_excluded_repositories),

          __t_repositories.resources
        )
      }}
    # empty __t_repositories again to save some resources
    __t_repositories: []

# if this task file is included once more, the list of filtered Repositories will be incorrect, as it just adds
# items to the previous existing list
- name: repository_filtering | Reset __t_filtered_repositories
  ansible.builtin.set_fact:
    __t_filtered_repositories: []

- name: >-
    repository_filtering | Exclude all Repositories which are not used in any Content Views/Composite Content Views
  ansible.builtin.set_fact:
    __t_filtered_repositories: >-
      {{
        __t_filtered_repositories | default([]) + [
          __t_repository
        ]
      }}
  when:
    - >-
      __t_repository.name in
      __t_filtered_content_views |
      map(attribute='repositories') |
      ansible.builtin.flatten |
      map(attribute='name') |
      unique

    - >-
      __t_repository.name not in
      __t_filtered_repositories | default([]) |
      map(attribute='name', default=[])
  loop: "{{ __t_repositories_excluded }}"
  loop_control:
    loop_var: __t_repository
    label: "{{ __t_repository.name }}"

- name: "repository_filtering | Debug: Filterered Repositories (names only)"
  ansible.builtin.debug:
    var: __t_filtered_repositories | map(attribute='name')
    verbosity: 1

- name: "repository_filtering | Debug: Filterered Repositories"
  ansible.builtin.debug:
    var: __t_filtered_repositories
    verbosity: 2
